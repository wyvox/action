name: "pnpm monorepo action with no boilerplate"
description: 'Removes all boilerplate: checkout, pnpm, cache, optional turborepo.'
author: NullVoxPopuli
branding:
  icon: 'package'
  color: 'orange'
inputs:
  # pnpm and node options
  node-version:
    description: "Override the default node version, or override what is specified in your project's volta config"
    required: false
  node-registry-url:
    description: "Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN."
    required: false
    default: ''    
  pnpm-version:
    description: 'Override the default pnpm version, which defaults to the latest 8.x'
    required: false
  pnpm-args:
    description: 'Directly pass args to pnpm'
    required: false

  # checkout options
  persist-credentials:
    description: 'Whether to configure the token or SSH key with the local git config'
    default: true
  fetch-depth:
    description: 'Number of commits to fetch. 0 indicates all history for all branches and tags.'
    default: 1
  lfs:
    description: 'Whether to download Git-LFS files'
    default: ''
  ref:
    description: 'Which git ref to use when checking out code'
    default: ''

  # turborepo options
  repo-token:
    description: 'A token with repo access to allow turborepo to upload and download artifacts. The default secrets.GITHUB_TOKEN is enough.'
    required: false


runs:
  using: 'composite'
  steps:
    - name: 'Checkout repository'
      uses: actions/checkout@v4
      with:
        persist-credentials: ${{ inputs.persist-credentials }}
        fetch-depth: ${{ inputs.fetch-depth }}
        lfs: ${{ inputs.lfs }}

    - name: 'Setup local TurboRepo server'
      if: ${{ inputs.repo-token }}
      uses: felixmosh/turborepo-gh-artifacts@v3
      with:
        repo-token: ${{ inputs.repo-token }}

    - name: 'Setup dependencies and cache'
      uses: wyvox/action-setup-pnpm@v3
      with: 
        node-version: ${{ inputs.node-version }}
        pnpm-version: ${{ inputs.pnpm-version }}
        args: ${{ inputs.pnpm-args }}
        node-registry-url: ${{ inputs.node-registry-url }}

